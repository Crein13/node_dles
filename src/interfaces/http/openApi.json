{
  "openapi": "3.0.0",
  "info": {
    "title": "AmberJS API",
    "version": "v1"
  },
  "servers": [
    {
      "description": "Local server",
      "url": "/api"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "listUsers",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "tags": ["Users"],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "showUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "User new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "operationId": "listDepartments",
        "tags": ["Departments"],
        "responses": {
          "200": {
            "description": "List of all departments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createDepartment",
        "tags": ["Departments"],
        "requestBody": {
          "description": "Department Data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDepartment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Department created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "400": {
            "description": "Department not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "operationId": "showDepartment",
        "tags": ["Departments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of department to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return department with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateDepartment",
        "tags": ["Departments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of department to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Department new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDepartment"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Department updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteDepartment",
        "tags": ["Departments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of department to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Department deleted successfully"
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },

  "defaultResponses": {
    "ValidationError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ValidationError"]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/defaultResponses/ValidationErrorDetail"
          }
        }
      }
    },
    "ValidationErrorDetail": {
      "properties": {
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": ["NotFoundError"]
        },
        "details": {
          "type": "string",
          "enum": ["User with id {id} not found"]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a user",
            "x-primary-key": true
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "isLoggedIn": {
            "type": "boolean"
          },
          "loginAt": {
            "type": "string"
          },
          "logoutAt": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          }
        }
      },
      "NewUser": {
        "properties": {
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "isLoggedIn": {
            "type": "boolean"
          },
          "loginAt": {
            "type": "string"
          },
          "logoutAt": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          }
        }
      },
      "Department": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a department",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NewDepartment": {
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
